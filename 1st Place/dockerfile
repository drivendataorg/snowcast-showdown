#FROM nvidia/cuda:11.1.1-devel-ubuntu20.04 as cuda
#FROM pytorch/pytorch:1.9.1-cuda11.1-cudnn8-devel as torch
FROM continuumio/anaconda3:2021.11 as conda

RUN conda install -c conda-forge pyhdf --yes
RUN pip install torch==1.9.1 --extra-index-url https://download.pytorch.org/whl/cu111
RUN pip install torch-scatter==2.0.9 -f https://data.pyg.org/whl/torch-1.9.1+cu111.html
RUN pip install azure==4.0.0
RUN pip install azure-storage-blob==12.9.0
RUN pip install planetary_computer earthengine-api==0.1.292 wget numpy==1.21.4 geojson proj pyproj geotiff pyhdf==0.10.3 netCDF4 MetPy==1.1.0 scipy pandas matplotlib==3.3.4 seaborn opencv-python xarray==0.20.2 regex opencv-python-headless shapely pyshp imagecodecs
RUN apt update || true
#RUN apt upgrade
RUN apt -y install wget
WORKDIR /home/root

#RUN wget -O cartopy.tar.bz2 https://anaconda.org/conda-forge/cartopy/0.20.0/download/linux-64/cartopy-0.20.0-py37h259df35_2.tar.bz2
#RUN wget -O cartopy.tar.bz2 https://anaconda.org/conda-forge/cartopy/0.20.0/download/linux-64/cartopy-0.20.0-py38hf9a4893_2.tar.bz2
RUN wget -O cartopy.tar.bz2 https://anaconda.org/conda-forge/cartopy/0.20.0/download/linux-64/cartopy-0.20.0-py39ha48bd0d_2.tar.bz2 
RUN wget -O geos.tar.bz2 https://anaconda.org/conda-forge/geos/3.9.1/download/linux-64/geos-3.9.1-h9c3ff4c_2.tar.bz2
RUN wget -O proj.tar.bz2 https://anaconda.org/conda-forge/proj/8.1.1/download/linux-64/proj-8.1.1-h277dcde_2.tar.bz2
RUN wget -O hdf5.tar.bz2 https://anaconda.org/conda-forge/hdf5/1.12.1/download/linux-aarch64/hdf5-1.12.1-nompi_h7bde11e_104.tar.bz2
RUN ls -l

RUN conda install ./proj.tar.bz2 ./geos.tar.bz2 ./cartopy.tar.bz2 ./hdf5.tar.bz2
#RUN conda install -c conda-forge cartopy==0.20.0 proj==8.1.1 geos==3.9.1 hdf5==1.12.1 --yes

RUN apt-get install ffmpeg libsm6 libxext6 libcurl4 -y

RUN pip install --ignore-installed -U daal4py tbb4py
RUN pip cache purge
RUN conda clean -a
RUN rm *.tar.bz2

#RUN apt update
#RUN apt upgrade -y
#RUN apt-get install linux-headers-$(uname -r)
#RUN distribution=$(. /etc/os-release;echo $ID$VERSION_ID | sed -e 's/\.//g') && \
#    wget https://developer.download.nvidia.com/compute/cuda/repos/$distribution/x86_64/cuda-$distribution.pin  && \
#    mv cuda-$distribution.pin /etc/apt/preferences.d/cuda-repository-pin-600  && \
#    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/$distribution/x86_64/3bf863cc.pub && \
#RUN echo "deb http://developer.download.nvidia.com/compute/cuda/repos/$distribution/x86_64 /" | tee /etc/apt/sources.list.d/cuda.list
#RUN apt-get update  && \
#    apt-get -y install cuda-drivers
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=$CUDA_HOME/bin:$PATH
ENV LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH
ENV CUDA_VISIBLE_DEVICES=0

#ENV WORKDIR=/home/root/
WORKDIR /home/root

#COPY ./submission_20220324-20220630 .
COPY ./withdata .
#COPY ./submission .
COPY ./*.sh ./
RUN mkdir data/modis
RUN mkdir work
ENV MODISPATH /home/root/data/modis
RUN echo "set MODISPATH=$MODISPATH"
RUN ls -l

WORKDIR /home/root/work

#CMD ["python3 /home/root/src/main.py --maindir /home/root --mode oper "]
#ENTRYPOINT ["python3"]





